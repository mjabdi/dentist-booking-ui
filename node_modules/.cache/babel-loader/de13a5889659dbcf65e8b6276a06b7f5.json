{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mohammad/MyProjects/dentist-booking-ui/src/DateForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport GlobalState from './GlobalState';\nimport { BrowserView, MobileView } from 'react-device-detect';\nimport TimeService from './services/TimeService';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { format, addMinutes, isWeekend, getDay } from 'date-fns';\nimport { enGB } from 'date-fns/locale';\nimport dateformat from 'dateformat';\n\nclass UTCUtils extends DateFnsUtils {\n  constructor(...args) {\n    super(...args);\n    this.locale = enGB;\n  } // format(date, formatString) {\n  //   return format(new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000 ), formatString,enGB);\n  // }\n  // getCalendarHeaderText(date){\n  //   return dateformat(date, 'mmmm yyyy');\n  // }\n  // getDayText(date)\n  // {\n  //   return dateformat(date, 'd');\n  // }\n\n\n}\n\nconst useStyles = makeStyles(theme => ({\n  loadingBox: {},\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginBottom: \"15px\"\n  }\n}));\nexport default function DateForm() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useContext(GlobalState);\n  const [firstAvailableDay, setFirstAvailableDay] = React.useState(null);\n  const [fullyBookedDays, setFullyBookedDays] = React.useState(null);\n  const [bookingDate, setBookingDate] = React.useState(state.bookingDate);\n  const [dataLoaded, setDataLoaded] = React.useState(false);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const LoadData = () => {\n    const promise1 = TimeService.getFirstAvailableDate();\n    const promise2 = TimeService.getFullyBookedDates();\n    Promise.all([promise1, promise2]).then(values => {\n      let firstday = new Date(values[0].data.date);\n      firstday.setHours(0, 0, 0, 0);\n      firstday = new Date(firstday.getTime() - firstday.getTimezoneOffset() * 60 * 1000);\n      setFirstAvailableDay(firstday);\n\n      if (!state.bookingDate) {\n        dateChanged(firstday);\n      }\n\n      setFullyBookedDays(values[1].data);\n      setDataLoaded(true);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    LoadData();\n  }, []);\n\n  const dateChanged = date => {\n    date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0); // const offset = parseInt(date.getTimezoneOffset());\n    // console.log(offset);\n\n    date = new Date(date.getTime() - date.getTimezoneOffset() * 60 * 1000); // date = new Date(date.getFullYear(), date.getMonth(), date.getDate(),0,0,0,0);\n    // date = format(date, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/London' }) ; // 2014-10-25 10:46:20 GMT 00\n    // date = toDate(date);\n\n    console.log(date);\n    setBookingDate(date);\n    setState(state => ({ ...state,\n      bookingDate: date\n    }));\n  };\n\n  const checkFullyBooked = date => {\n    var result = false; // if (isWeekend(date))\n    //   return true\n    // console.log(getDay(date))\n\n    if (getDay(date) === 1 || getDay(date) === 2 || getDay(date) === 3 || getDay(date) === 6 || getDay(date) === 0) return true;\n\n    if (dateformat(date, 'yyyy-mm-dd') < dateformat(firstAvailableDay, 'yyyy-mm-dd')) {\n      return true;\n    } else if (fullyBookedDays && fullyBookedDays.length > 0) {\n      for (var i = 0; i < fullyBookedDays.length; i++) {\n        if (dateformat(new Date(fullyBookedDays[i]), 'yyyy-mm-dd') === dateformat(date, 'yyyy-mm-dd')) {\n          result = true;\n        }\n      }\n\n      return result;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      className: classes.pageTitle,\n      children: \"Pick a Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this), dataLoaded && firstAvailableDay ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #00909d\",\n            marginBottom: \"10px\",\n            borderRadius: \"8px\",\n            fontSize: \"1.2rem\",\n            padding: \"10px 10px\",\n            color: \"#0c4e59\",\n            fontWeight: \"500\",\n            background: \"#d9fffd\"\n          },\n          children: [\"For early or late night appointment, for weekend or if your desired time is already booked please call \\\"020 71830357\\\" and one of our team would be happy to accommodate if possible\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"20px\",\n              fontSize: \"1.5rem\",\n              fontWeight: \"500\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              direction: \"row\",\n              justify: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"tel:02071831049\",\n                    children: [/*#__PURE__*/_jsxDEV(PhoneIcon, {\n                      style: {\n                        color: \"#00909d\",\n                        fontSize: \"2rem\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 56\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: \"-10px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"tel:02071830357\",\n                    style: {\n                      color: \"#00909d\"\n                    },\n                    children: \" Call:  020 71830357 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(BrowserView, {\n          children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: UTCUtils,\n            locale: enGB,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              autoOk: true,\n              disablePast: true,\n              openTo: \"date\",\n              orientation: \"landscape\",\n              variant: \"static\",\n              fullWidth: true,\n              value: bookingDate,\n              onChange: dateChanged,\n              shouldDisableDate: checkFullyBooked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MobileView, {\n          children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: UTCUtils,\n            locale: enGB,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              autoOk: true,\n              disablePast: true,\n              openTo: \"date\",\n              variant: \"static\",\n              fullWidth: true,\n              value: bookingDate,\n              onChange: dateChanged,\n              shouldDisableDate: checkFullyBooked\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: '80%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"text\",\n          width: '80%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          variant: \"rect\",\n          width: '80%',\n          height: 220\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DateForm, \"PgWuresZla3UtIPi1lp3G1j5BtA=\", false, function () {\n  return [useStyles];\n});\n\n_c = DateForm;\n\nfunction EquallDates(date1, date2) {\n  return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n}\n\n_c2 = EquallDates;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DateForm\");\n$RefreshReg$(_c2, \"EquallDates\");","map":{"version":3,"sources":["/Users/mohammad/MyProjects/dentist-booking-ui/src/DateForm.js"],"names":["React","useEffect","Typography","DatePicker","MuiPickersUtilsProvider","DateFnsUtils","GlobalState","BrowserView","MobileView","TimeService","makeStyles","Grid","Skeleton","format","addMinutes","isWeekend","getDay","enGB","dateformat","UTCUtils","locale","useStyles","theme","loadingBox","pageTitle","color","palette","primary","main","marginBottom","DateForm","classes","state","setState","useContext","firstAvailableDay","setFirstAvailableDay","useState","fullyBookedDays","setFullyBookedDays","bookingDate","setBookingDate","dataLoaded","setDataLoaded","window","scrollTo","LoadData","promise1","getFirstAvailableDate","promise2","getFullyBookedDates","Promise","all","then","values","firstday","Date","data","date","setHours","getTime","getTimezoneOffset","dateChanged","catch","err","console","log","getFullYear","getMonth","getDate","checkFullyBooked","result","length","i","border","borderRadius","fontSize","padding","fontWeight","background","marginTop","EquallDates","date1","date2"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SACIC,UADJ,EAEIC,uBAFJ,QAGS,sBAHT;AAKA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,qBAAtC;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAGA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,EAAwCC,MAAxC,QAAsD,UAAtD;AAGA,SAASC,IAAT,QAAsB,iBAAtB;AAGA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,QAAN,SAAuBd,YAAvB,CAAoC;AAAA;AAAA;AAAA,SAElCe,MAFkC,GAEzBH,IAFyB;AAAA,IAGlC;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAdkC;;AAqBpC,MAAMI,SAAS,GAAGX,UAAU,CAAEY,KAAD,KAAY;AAEvCC,EAAAA,UAAU,EAAE,EAF2B;AAMvCC,EAAAA,SAAS,EAAC;AACRC,IAAAA,KAAK,EAAGH,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsBC,IADtB;AAERC,IAAAA,YAAY,EAAE;AAFN;AAN6B,CAAZ,CAAD,CAA5B;AAgBA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAChC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AAEC,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBjC,KAAK,CAACkC,UAAN,CAAiB5B,WAAjB,CAA1B;AAEA,QAAM,CAAC6B,iBAAD,EAAoBC,oBAApB,IAA4CpC,KAAK,CAACqC,QAAN,CAAe,IAAf,CAAlD;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCvC,KAAK,CAACqC,QAAN,CAAe,IAAf,CAA9C;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCzC,KAAK,CAACqC,QAAN,CAAeL,KAAK,CAACQ,WAArB,CAAtC;AAGA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA+B3C,KAAK,CAACqC,QAAN,CAAe,KAAf,CAArC;AAEApC,EAAAA,SAAS,CAAC,MAAM;AACd2C,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AAErB,UAAMC,QAAQ,GAAGtC,WAAW,CAACuC,qBAAZ,EAAjB;AACA,UAAMC,QAAQ,GAAGxC,WAAW,CAACyC,mBAAZ,EAAjB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACL,QAAD,EAAWE,QAAX,CAAZ,EAAkCI,IAAlC,CAAyCC,MAAD,IAAY;AAClD,UAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAAUF,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAX,CAAiBC,IAA1B,CAAf;AACAH,MAAAA,QAAQ,CAACI,QAAT,CAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,EAAwB,CAAxB;AAEAJ,MAAAA,QAAQ,GAAG,IAAIC,IAAJ,CAASD,QAAQ,CAACK,OAAT,KAAqBL,QAAQ,CAACM,iBAAT,KAA+B,EAA/B,GAAoC,IAAlE,CAAX;AAEAzB,MAAAA,oBAAoB,CAACmB,QAAD,CAApB;;AACA,UAAI,CAACvB,KAAK,CAACQ,WAAX,EACA;AACEsB,QAAAA,WAAW,CAACP,QAAD,CAAX;AACD;;AAEDhB,MAAAA,kBAAkB,CAACe,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAX,CAAlB;AAEAd,MAAAA,aAAa,CAAC,IAAD,CAAb;AAED,KAhBD,EAgBGoB,KAhBH,CAgBWC,GAAD,IACV;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAnBD;AAoBL,GAzBG;;AA6BA/D,EAAAA,SAAS,CAAC,MAAM;AACd6C,IAAAA,QAAQ;AAET,GAHQ,EAGP,EAHO,CAAT;;AAOA,QAAMgB,WAAW,GAAIJ,IAAD,IACpB;AACIA,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASE,IAAI,CAACS,WAAL,EAAT,EAA6BT,IAAI,CAACU,QAAL,EAA7B,EAA8CV,IAAI,CAACW,OAAL,EAA9C,EAA6D,CAA7D,EAA+D,CAA/D,EAAiE,CAAjE,EAAmE,CAAnE,CAAP,CADJ,CAEI;AACA;;AAEAX,IAAAA,IAAI,GAAG,IAAIF,IAAJ,CAASE,IAAI,CAACE,OAAL,KAAkBF,IAAI,CAACG,iBAAL,KAA2B,EAA3B,GAAgC,IAA3D,CAAP,CALJ,CAMI;AAEA;AACA;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAjB,IAAAA,cAAc,CAACiB,IAAD,CAAd;AACAzB,IAAAA,QAAQ,CAACD,KAAK,KAAK,EAAC,GAAGA,KAAJ;AAAWQ,MAAAA,WAAW,EAAEkB;AAAxB,KAAL,CAAN,CAAR;AACH,GAdD;;AAgBF,QAAMY,gBAAgB,GAAIZ,IAAD,IACzB;AACE,QAAIa,MAAM,GAAG,KAAb,CADF,CAGE;AACA;AAEA;;AAEA,QAAIvD,MAAM,CAAC0C,IAAD,CAAN,KAAiB,CAAjB,IAAsB1C,MAAM,CAAC0C,IAAD,CAAN,KAAiB,CAAvC,IAA4C1C,MAAM,CAAC0C,IAAD,CAAN,KAAiB,CAA7D,IAAmE1C,MAAM,CAAC0C,IAAD,CAAN,KAAiB,CAApF,IAA0F1C,MAAM,CAAC0C,IAAD,CAAN,KAAiB,CAA/G,EACE,OAAO,IAAP;;AAEF,QAAIxC,UAAU,CAACwC,IAAD,EAAM,YAAN,CAAV,GAAgCxC,UAAU,CAACiB,iBAAD,EAAmB,YAAnB,CAA9C,EACA;AACG,aAAO,IAAP;AACF,KAHD,MAKK,IAAIG,eAAe,IAAIA,eAAe,CAACkC,MAAhB,GAAyB,CAAhD,EACL;AACE,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAeA,CAAC,GAAGnC,eAAe,CAACkC,MAAnC,EAA4CC,CAAC,EAA7C,EACA;AACE,YAAIvD,UAAU,CAAC,IAAIsC,IAAJ,CAASlB,eAAe,CAACmC,CAAD,CAAxB,CAAD,EAA+B,YAA/B,CAAV,KAA2DvD,UAAU,CAACwC,IAAD,EAAM,YAAN,CAAzE,EACA;AACEa,UAAAA,MAAM,GAAG,IAAT;AACD;AACF;;AAED,aAAOA,MAAP;AACD,KAXI,MAaL;AACE,aAAO,KAAP;AACD;AACJ,GAjCC;;AAmCA,sBAEE,QAAC,KAAD,CAAO,QAAP;AAAA,4BAEY,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,YAAY,MAArC;AAAsC,MAAA,SAAS,EAAExC,OAAO,CAACP,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFZ,EAMMkB,UAAU,IAAIP,iBAAf,gBAEO,QAAC,KAAD,CAAO,QAAP;AAAA,8BAEhB,QAAC,KAAD,CAAO,QAAP;AAAA,+BACc;AAAK,UAAA,KAAK,EAAE;AAACuC,YAAAA,MAAM,EAAC,mBAAR;AAA6B7C,YAAAA,YAAY,EAAC,MAA1C;AAAoD8C,YAAAA,YAAY,EAAC,KAAjE;AAAyEC,YAAAA,QAAQ,EAAE,QAAnF;AAA6FC,YAAAA,OAAO,EAAC,WAArG;AAAkHpD,YAAAA,KAAK,EAAE,SAAzH;AAAoIqD,YAAAA,UAAU,EAAE,KAAhJ;AAAuJC,YAAAA,UAAU,EAAE;AAAnK,WAAZ;AAAA,2NAEM;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE,MAAb;AAAqBJ,cAAAA,QAAQ,EAAE,QAA/B;AAAyCE,cAAAA,UAAU,EAAE;AAArD,aAAZ;AAAA,mCACF,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAA4B,cAAA,SAAS,EAAC,KAAtC;AAA4C,cAAA,OAAO,EAAC,QAApD;AAA6D,cAAA,UAAU,EAAC,QAAxE;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE;AAAA,gDAAO;AAAG,oBAAA,IAAI,EAAC,iBAAR;AAAA,4CAA0B,QAAC,SAAD;AAAW,sBAAA,KAAK,EAAE;AAAErD,wBAAAA,KAAK,EAAE,SAAT;AAAoBmD,wBAAAA,QAAQ,EAAE;AAA9B;AAAlB;AAAA;AAAA;AAAA;AAAA,4BAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE;AAAK,kBAAA,KAAK,EAAE;AAAEI,oBAAAA,SAAS,EAAE;AAAb,mBAAZ;AAAA,yCACE;AAAG,oBAAA,IAAI,EAAC,iBAAR;AAA0B,oBAAA,KAAK,EAAE;AAAEvD,sBAAAA,KAAK,EAAE;AAAT,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,kBAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA,cAFgB,eAwBA,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAAA,gCAOQ,QAAC,WAAD;AAAA,iCACI,QAAC,uBAAD;AAAyB,YAAA,KAAK,EAAEN,QAAhC;AAA0C,YAAA,MAAM,EAAEF,IAAlD;AAAA,mCACQ,QAAC,UAAD;AAAY,cAAA,MAAM,MAAlB;AACY,cAAA,WAAW,EAAE,IADzB;AAEY,cAAA,MAAM,EAAC,MAFnB;AAGY,cAAA,WAAW,EAAC,WAHxB;AAIY,cAAA,OAAO,EAAC,QAJpB;AAKY,cAAA,SAAS,MALrB;AAMY,cAAA,KAAK,EAAEuB,WANnB;AAOY,cAAA,QAAQ,EAAEsB,WAPtB;AAQY,cAAA,iBAAiB,EAAEQ;AAR/B;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPR,eAsBQ,QAAC,UAAD;AAAA,iCACI,QAAC,uBAAD;AAAyB,YAAA,KAAK,EAAEnD,QAAhC;AAA0C,YAAA,MAAM,EAAEF,IAAlD;AAAA,mCACY,QAAC,UAAD;AAAY,cAAA,MAAM,MAAlB;AACY,cAAA,WAAW,EAAE,IADzB;AAEY,cAAA,MAAM,EAAC,MAFnB;AAGY,cAAA,OAAO,EAAC,QAHpB;AAIY,cAAA,SAAS,MAJrB;AAKY,cAAA,KAAK,EAAEuB,WALnB;AAMY,cAAA,QAAQ,EAAEsB,WANtB;AAOY,cAAA,iBAAiB,EAAEQ;AAP/B;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtBR;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFP,gBAmEG,QAAC,KAAD,CAAO,QAAP;AAAA,6BACI,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAAA,gCAOM,QAAC,QAAD;AAAU,UAAA,OAAO,EAAC,MAAlB;AAAyB,UAAA,KAAK,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAPN,eAQM,QAAC,QAAD;AAAU,UAAA,OAAO,EAAC,MAAlB;AAAyB,UAAA,KAAK,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBARN,eASM,QAAC,QAAD;AAAU,UAAA,OAAO,EAAC,MAAlB;AAAyB,UAAA,KAAK,EAAE,KAAhC;AAAwC,UAAA,MAAM,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,gBATN;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzER;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AA6FD;;GArMuBxC,Q;UACLT,S;;;KADKS,Q;;AA2MxB,SAASmD,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EACA;AACG,SACQD,KAAK,CAACf,WAAN,OAAwBgB,KAAK,CAAChB,WAAN,EAAxB,IACAe,KAAK,CAACd,QAAN,OAAqBe,KAAK,CAACf,QAAN,EADrB,IAEAc,KAAK,CAACb,OAAN,OAAoBc,KAAK,CAACd,OAAN,EAH5B;AAKF;;MAPQY,W","sourcesContent":["import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {\n    DatePicker,\n    MuiPickersUtilsProvider,\n  } from '@material-ui/pickers';\n\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport GlobalState from './GlobalState';\nimport {BrowserView, MobileView} from 'react-device-detect';\n\nimport TimeService from './services/TimeService';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nimport { format, addMinutes, isWeekend, getDay } from 'date-fns';\n\n\nimport { enGB, } from 'date-fns/locale'\n\n\nimport dateformat from 'dateformat';\n\nclass UTCUtils extends DateFnsUtils {\n \n  locale = enGB;\n  // format(date, formatString) {\n  //   return format(new Date(date.getTime() + date.getTimezoneOffset() * 60 * 1000 ), formatString,enGB);\n  // }\n\n  // getCalendarHeaderText(date){\n  //   return dateformat(date, 'mmmm yyyy');\n  // }\n\n  // getDayText(date)\n  // {\n  //   return dateformat(date, 'd');\n  // }\n\n\n\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  loadingBox: {\n    \n  },\n\n  pageTitle:{\n    color : theme.palette.primary.main,\n    marginBottom: \"15px\"\n  }\n\n}));\n\n\n\n\nexport default function DateForm() {\n   const classes = useStyles();\n\n    const [state, setState] = React.useContext(GlobalState);\n  \n    const [firstAvailableDay, setFirstAvailableDay] = React.useState(null);\n    const [fullyBookedDays, setFullyBookedDays] = React.useState(null);\n\n    const [bookingDate, setBookingDate] = React.useState(state.bookingDate);\n\n\n    const [dataLoaded, setDataLoaded] =  React.useState(false);\n\n    useEffect(() => {\n      window.scrollTo(0, 0)\n    }, []);\n\n    const LoadData = () => {\n\n      const promise1 = TimeService.getFirstAvailableDate();\n      const promise2 = TimeService.getFullyBookedDates();\n\n      Promise.all([promise1, promise2]).then( (values) => {\n        let firstday = new Date((values[0].data).date);\n        firstday.setHours(0,0,0,0);\n\n        firstday = new Date(firstday.getTime() - firstday.getTimezoneOffset() * 60 * 1000);\n\n        setFirstAvailableDay(firstday);\n        if (!state.bookingDate)\n        {\n          dateChanged(firstday);\n        }\n       \n        setFullyBookedDays(values[1].data);\n\n        setDataLoaded(true);\n\n      }).catch( (err) =>\n      {\n        console.log(err);\n      });\n}\n\n\n\n    useEffect(() => {\n      LoadData();\n\n    },[]);\n\n  \n\n    const dateChanged = (date) =>\n    {\n        date = new Date(date.getFullYear(), date.getMonth(), date.getDate(),0,0,0,0);\n        // const offset = parseInt(date.getTimezoneOffset());\n        // console.log(offset);\n\n        date = new Date(date.getTime() - (date.getTimezoneOffset() * 60 * 1000));\n        // date = new Date(date.getFullYear(), date.getMonth(), date.getDate(),0,0,0,0);\n        \n        // date = format(date, 'yyyy-MM-dd HH:mm:ss zzz', { timeZone: 'Europe/London' }) ; // 2014-10-25 10:46:20 GMT 00\n        // date = toDate(date);\n        console.log(date);\n        setBookingDate(date);\n        setState(state => ({...state, bookingDate: date}));\n    }\n\n  const checkFullyBooked = (date) =>\n  {\n    var result = false;\n\n    // if (isWeekend(date))\n    //   return true\n\n    // console.log(getDay(date))\n\n    if (getDay(date) === 1 || getDay(date) === 2 || getDay(date) === 3 ||  getDay(date) === 6 ||  getDay(date) === 0)\n      return true  \n\n    if (dateformat(date,'yyyy-mm-dd') < dateformat(firstAvailableDay,'yyyy-mm-dd'))\n    {\n       return true;\n    }\n\n    else if (fullyBookedDays && fullyBookedDays.length > 0)\n    {\n      for (var i=0 ; i < fullyBookedDays.length ; i++ )\n      {\n        if (dateformat(new Date(fullyBookedDays[i]), 'yyyy-mm-dd') === dateformat(date,'yyyy-mm-dd'))\n        {\n          result = true;\n        }\n      }\n\n      return result;\n    }\n    else\n    {\n      return false;\n    }\n}\n\n  return (\n\n    <React.Fragment>\n               \n                <Typography variant=\"h6\" gutterBottom className={classes.pageTitle}>\n                    Pick a Date\n                </Typography>\n\n        {(dataLoaded && firstAvailableDay) ?  (\n            \n                <React.Fragment>\n\n<React.Fragment>\n              <div style={{border:\"1px solid #00909d\", marginBottom:\"10px\"  , borderRadius:\"8px\",  fontSize: \"1.2rem\", padding:\"10px 10px\", color: \"#0c4e59\", fontWeight: \"500\", background: \"#d9fffd\" }}>\n              For early or late night appointment, for weekend or if your desired time is already booked please call \"020 71830357\" and one of our team would be happy to accommodate if possible\n                    <div style={{ marginTop: \"20px\", fontSize: \"1.5rem\", fontWeight: \"500\" }}>\n                  <Grid container spacing={2} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    <Grid item>\n                      <div>  <a href=\"tel:02071831049\"><PhoneIcon style={{ color: \"#00909d\", fontSize: \"2rem\" }} /> </a></div>\n                    </Grid>\n                    <Grid item>\n                      <div style={{ marginTop: \"-10px\" }}>\n                        <a href=\"tel:02071830357\" style={{ color: \"#00909d\" }}> Call:  020 71830357 </a>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n              </div>\n\n            </React.Fragment>\n\n\n\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  >\n\n                        <BrowserView>\n                            <MuiPickersUtilsProvider utils={UTCUtils} locale={enGB}>\n                                    <DatePicker autoOk \n                                                disablePast={true} \n                                                openTo=\"date\"\n                                                orientation=\"landscape\" \n                                                variant=\"static\" \n                                                fullWidth\n                                                value={bookingDate} \n                                                onChange={dateChanged} \n                                                shouldDisableDate={checkFullyBooked}\n                                                />\n                            </MuiPickersUtilsProvider>\n                        </BrowserView>\n\n                        <MobileView>\n                            <MuiPickersUtilsProvider utils={UTCUtils} locale={enGB}>\n                                        <DatePicker autoOk \n                                                    disablePast={true} \n                                                    openTo=\"date\"\n                                                    variant=\"static\" \n                                                    fullWidth\n                                                    value={bookingDate} \n                                                    onChange={dateChanged} \n                                                    shouldDisableDate={checkFullyBooked}\n                                                    />\n                                </MuiPickersUtilsProvider>\n                        </MobileView>\n                </Grid>\n\n              </React.Fragment>\n              )\n            : \n            (\n            <React.Fragment>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  >\n\n                      <Skeleton variant=\"text\" width={'80%'} />\n                      <Skeleton variant=\"text\" width={'80%'}  />\n                      <Skeleton variant=\"rect\" width={'80%'}  height={220} />\n\n                  </Grid>\n            </React.Fragment>\n            )\n          }\n    </React.Fragment>\n  );\n}\n\n\n\n\n\nfunction EquallDates(date1, date2)\n{\n   return (\n           date1.getFullYear() === date2.getFullYear() &&\n           date1.getMonth() === date2.getMonth() &&\n           date1.getDate() === date2.getDate()\n   );      \n}\n"]},"metadata":{},"sourceType":"module"}