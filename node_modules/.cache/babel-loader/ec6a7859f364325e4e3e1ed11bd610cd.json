{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mohammad/MyProjects/dentist-booking-ui/src/PaymentForm.js\";\nimport \"./sqpaymentform.css\";\nimport React from \"react\";\nimport { SquarePaymentForm, CreditCardNumberInput, CreditCardExpirationDateInput, CreditCardPostalCodeInput, CreditCardCVVInput, CreditCardSubmitButton } from \"react-square-payment-form\";\nimport { Grid } from \"@material-ui/core\";\nimport PaymentService from \"./services/PaymentService\";\nconst SANDBOX = false;\nconst LIVE_APPLICATION_ID = \"sq0idp-8-tRTRJuDMDeTBHxJq02xg\"; // Live\n\nconst LIVE_LOCATION_ID = \"L2SBNYPV0XWVJ\"; //Live   \n\nconst SANDBOX_APPLICATION_ID = \"sandbox-sq0idb-HxCN0_lvfnlC15ZMFkUCdQ\"; //SANDBOX\n\nconst SANDBOX_LOCATION_ID = \"LBR8YPCPR878R\"; // SANDBOX\n\nexport default class PaymentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.cardNonceResponseReceived = async (errors, nonce, cardData, buyerVerificationToken) => {\n      if (errors) {\n        this.setState({\n          errorMessages: errors.map(error => error.message)\n        });\n        return;\n      }\n\n      this.setState({\n        errorMessages: []\n      });\n\n      try {\n        this.props.onStart();\n        const result = await PaymentService.doPayment({\n          nonce: nonce,\n          token: buyerVerificationToken,\n          personInfo: this.state.personInfo\n        });\n        console.log(result);\n        this.props.onComplete(result);\n      } catch (ex) {\n        console.error(ex);\n        this.props.onError(ex);\n      }\n    };\n\n    this.state = {\n      personInfo: props.personInfo,\n      errorMessages: []\n    };\n    this.cardNonceResponseReceived = this.cardNonceResponseReceived.bind(this);\n    this.createVerificationDetails = this.createVerificationDetails.bind(this);\n  }\n\n  createVerificationDetails() {\n    return {\n      amount: \"100.00\",\n      currencyCode: \"GBP\",\n      intent: \"CHARGE\",\n      billingContact: {\n        name: this.state.personInfo.fullname,\n        email: this.state.personInfo.email,\n        phone: this.state.personInfo.phone\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(SquarePaymentForm, {\n            sandbox: SANDBOX,\n            applicationId: SANDBOX ? SANDBOX_APPLICATION_ID : LIVE_APPLICATION_ID,\n            locationId: SANDBOX ? SANDBOX_LOCATION_ID : LIVE_LOCATION_ID,\n            cardNonceResponseReceived: this.cardNonceResponseReceived,\n            createVerificationDetails: this.createVerificationDetails,\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"sq-fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(CreditCardNumberInput, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sq-form-third\",\n                children: /*#__PURE__*/_jsxDEV(CreditCardExpirationDateInput, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sq-form-third\",\n                children: /*#__PURE__*/_jsxDEV(CreditCardCVVInput, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CreditCardSubmitButton, {\n              children: \"Pay \\xA3100.00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sq-error-message\",\n        children: this.state.errorMessages.map(errorMessage => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: errorMessage\n        }, `sq-error-${errorMessage}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/mohammad/MyProjects/dentist-booking-ui/src/PaymentForm.js"],"names":["React","SquarePaymentForm","CreditCardNumberInput","CreditCardExpirationDateInput","CreditCardPostalCodeInput","CreditCardCVVInput","CreditCardSubmitButton","Grid","PaymentService","SANDBOX","LIVE_APPLICATION_ID","LIVE_LOCATION_ID","SANDBOX_APPLICATION_ID","SANDBOX_LOCATION_ID","PaymentForm","Component","constructor","props","cardNonceResponseReceived","errors","nonce","cardData","buyerVerificationToken","setState","errorMessages","map","error","message","onStart","result","doPayment","token","personInfo","state","console","log","onComplete","ex","onError","bind","createVerificationDetails","amount","currencyCode","intent","billingContact","name","fullname","email","phone","render","errorMessage"],"mappings":";;AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,qBAFF,EAGEC,6BAHF,EAIEC,yBAJF,EAKEC,kBALF,EAMEC,sBANF,QAOO,2BAPP;AAQA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAGA,MAAMC,OAAO,GAAG,KAAhB;AAEA,MAAMC,mBAAmB,GAAG,+BAA5B,C,CAA8D;;AAC9D,MAAMC,gBAAgB,GAAG,eAAzB,C,CAA8D;;AAE9D,MAAMC,sBAAsB,GAAG,uCAA/B,C,CAAyE;;AACzE,MAAMC,mBAAmB,GAAG,eAA5B,C,CAAyE;;AAKzE,eAAe,MAAMC,WAAN,SAA0Bd,KAAK,CAACe,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,yBAXmB,GAWS,OAC1BC,MAD0B,EAE1BC,KAF0B,EAG1BC,QAH0B,EAI1BC,sBAJ0B,KAKvB;AACH,UAAIH,MAAJ,EAAY;AACV,aAAKI,QAAL,CAAc;AAAEC,UAAAA,aAAa,EAAEL,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAACC,OAA5B;AAAjB,SAAd;AACA;AACD;;AAED,WAAKJ,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAd;;AAEA,UAAG;AACC,aAAKP,KAAL,CAAWW,OAAX;AACA,cAAMC,MAAM,GAAG,MAAMrB,cAAc,CAACsB,SAAf,CAAyB;AAACV,UAAAA,KAAK,EAAEA,KAAR;AAAeW,UAAAA,KAAK,EAAET,sBAAtB;AAA8CU,UAAAA,UAAU,EAAE,KAAKC,KAAL,CAAWD;AAArE,SAAzB,CAArB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,aAAKZ,KAAL,CAAWmB,UAAX,CAAsBP,MAAtB;AACH,OALD,CAMA,OAAMQ,EAAN,EACA;AACIH,QAAAA,OAAO,CAACR,KAAR,CAAcW,EAAd;AACA,aAAKpB,KAAL,CAAWqB,OAAX,CAAmBD,EAAnB;AACH;AACF,KAnCkB;;AAEjB,SAAKJ,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAEf,KAAK,CAACe,UADP;AAEXR,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAKA,SAAKN,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BqB,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKC,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BD,IAA/B,CAAoC,IAApC,CAAjC;AACD;;AA4BDC,EAAAA,yBAAyB,GAAG;AAC1B,WAAO;AACLC,MAAAA,MAAM,EAAE,QADH;AAELC,MAAAA,YAAY,EAAE,KAFT;AAGLC,MAAAA,MAAM,EAAE,QAHH;AAILC,MAAAA,cAAc,EAAE;AACdC,QAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWD,UAAX,CAAsBc,QADd;AAEdC,QAAAA,KAAK,EAAE,KAAKd,KAAL,CAAWD,UAAX,CAAsBe,KAFf;AAGdC,QAAAA,KAAK,EAAG,KAAKf,KAAL,CAAWD,UAAX,CAAsBgB;AAHhB;AAJX,KAAP;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,UAAU,EAAC,QAA5C;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,iBAAD;AACE,YAAA,OAAO,EAAExC,OADX;AAEE,YAAA,aAAa,EAAEA,OAAO,GAAGG,sBAAH,GAA4BF,mBAFpD;AAGE,YAAA,UAAU,EAAED,OAAO,GAAGI,mBAAH,GAAyBF,gBAH9C;AAIE,YAAA,yBAAyB,EAAE,KAAKO,yBAJlC;AAKE,YAAA,yBAAyB,EAAE,KAAKsB,yBALlC;AAAA,oCAOE;AAAU,cAAA,SAAS,EAAC,aAApB;AAAA,sCAEE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,sBAFF,eAKE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,uCACE,QAAC,6BAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAaE;AAAK,gBAAA,SAAS,EAAC,eAAf;AAAA,uCACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAyBE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAkCE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACG,KAAKP,KAAL,CAAWT,aAAX,CAAyBC,GAAzB,CAA8ByB,YAAD,iBAC5B;AAAA,oBAAsCA;AAAtC,WAAU,YAAWA,YAAa,EAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0CD;;AA9FsD","sourcesContent":["import \"./sqpaymentform.css\";\nimport React from \"react\";\nimport {\n  SquarePaymentForm,\n  CreditCardNumberInput,\n  CreditCardExpirationDateInput,\n  CreditCardPostalCodeInput,\n  CreditCardCVVInput,\n  CreditCardSubmitButton,\n} from \"react-square-payment-form\";\nimport { Grid } from \"@material-ui/core\";\nimport PaymentService from \"./services/PaymentService\";\n\n\nconst SANDBOX = false\n\nconst LIVE_APPLICATION_ID = \"sq0idp-8-tRTRJuDMDeTBHxJq02xg\";  // Live\nconst LIVE_LOCATION_ID = \"L2SBNYPV0XWVJ\";                     //Live   \n\nconst SANDBOX_APPLICATION_ID = \"sandbox-sq0idb-HxCN0_lvfnlC15ZMFkUCdQ\";  //SANDBOX\nconst SANDBOX_LOCATION_ID = \"LBR8YPCPR878R\";                             // SANDBOX\n\n\n\n\nexport default class PaymentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personInfo: props.personInfo,\n      errorMessages: [],\n    };\n\n    this.cardNonceResponseReceived = this.cardNonceResponseReceived.bind(this);\n    this.createVerificationDetails = this.createVerificationDetails.bind(this);\n  }\n\n  cardNonceResponseReceived = async (\n    errors,\n    nonce,\n    cardData,\n    buyerVerificationToken\n  ) => {\n    if (errors) {\n      this.setState({ errorMessages: errors.map((error) => error.message) });\n      return;\n    }\n\n    this.setState({ errorMessages: [] });\n\n    try{\n        this.props.onStart()\n        const result = await PaymentService.doPayment({nonce: nonce, token: buyerVerificationToken, personInfo: this.state.personInfo})\n        console.log(result)\n        this.props.onComplete(result)\n    }\n    catch(ex)\n    {\n        console.error(ex)\n        this.props.onError(ex)\n    }\n  };\n\n  createVerificationDetails() {\n    return {\n      amount: \"100.00\",\n      currencyCode: \"GBP\",\n      intent: \"CHARGE\",\n      billingContact: {\n        name: this.state.personInfo.fullname,\n        email: this.state.personInfo.email,\n        phone:  this.state.personInfo.phone,\n      },\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <SquarePaymentForm\n              sandbox={SANDBOX}\n              applicationId={SANDBOX ? SANDBOX_APPLICATION_ID : LIVE_APPLICATION_ID}\n              locationId={SANDBOX ? SANDBOX_LOCATION_ID : LIVE_LOCATION_ID}\n              cardNonceResponseReceived={this.cardNonceResponseReceived}\n              createVerificationDetails={this.createVerificationDetails}\n            >\n              <fieldset className=\"sq-fieldset\">\n\n                <CreditCardNumberInput/>\n             \n\n                <div className=\"sq-form-third\">\n                  <CreditCardExpirationDateInput />\n                </div>\n\n                {/* <div className=\"sq-form-third\">\n                  <CreditCardPostalCodeInput />\n                </div> */}\n\n                <div className=\"sq-form-third\">\n                  <CreditCardCVVInput />\n                </div>\n              </fieldset>\n\n              <CreditCardSubmitButton>Pay £100.00</CreditCardSubmitButton>\n\n            </SquarePaymentForm>\n          </Grid>\n        </Grid>\n\n        <div className=\"sq-error-message\">\n          {this.state.errorMessages.map((errorMessage) => (\n            <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}