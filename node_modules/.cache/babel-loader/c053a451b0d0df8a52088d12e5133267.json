{"ast":null,"code":"import * as EmailValidator from \"email-validator\";\nimport BookService from \"./services/BookService\";\nexport default async function ValidateStep(state, setState, step) {\n  var error = false;\n\n  if (step === 0) {\n    if (!state.bookingDate || !state.bookingDate.getTime()) {\n      setState(state => ({ ...state,\n        bookingDateError: true\n      }));\n      error = true;\n    }\n  }\n\n  if (step === 1) {\n    /// Validate time\n    if (!state.bookingTime) {\n      setState(state => ({ ...state,\n        bookingTimeError: true\n      }));\n      error = true;\n    }\n  } else if (step === 2) {\n    ///validate Basic Info\n    if (!state.fullname || state.fullname.trim().length < 1) {\n      setState(state => ({ ...state,\n        fullnameError: true\n      }));\n      error = true;\n    }\n\n    if (!state.email || !EmailValidator.validate(state.email)) {\n      setState(state => ({ ...state,\n        emailError: true\n      }));\n      error = true;\n    }\n\n    if (!state.retypeEmail || !EmailValidator.validate(state.retypeEmail) || state.email !== state.retypeEmail) {\n      setState(state => ({ ...state,\n        retypeEmailError: true\n      }));\n      error = true;\n    }\n\n    if (!state.phone || state.phone.trim().length < 1) {\n      setState(state => ({ ...state,\n        phoneError: true\n      }));\n      error = true;\n    } // if (!state.emailConfirmed)\n    // {\n    //   setState(state => ({...state, emailConfirmedError : true}));\n    //   error = true;\n    // }\n\n  } else if (step === 3) {\n    if (!state.package) {\n      state.package = \"Consultation\";\n    } // if (state.package && state.package.toLowerCase() === \"others\") {\n    //   if (!state.notes || state.notes.length < 1) {\n    //     error = true;\n    //     setState((state) => ({ ...state, notesError: true }));\n    //   }\n    // }\n\n\n    if (!error) {\n      if (!state.bookingRef) {\n        try {\n          const res = await BookService.getNewReference();\n\n          if (res && res.data && res.data.ref) {\n            setState(state => ({ ...state,\n              bookingRef: res.data.ref\n            }));\n          } else {\n            error = true;\n          }\n        } catch (ex) {\n          console.error(ex);\n          error = true;\n        }\n      }\n    }\n  }\n\n  return !error;\n}\n_c = ValidateStep;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidateStep\");","map":{"version":3,"sources":["/Users/mohammad/MyProjects/dentist-booking-ui/src/Validation.js"],"names":["EmailValidator","BookService","ValidateStep","state","setState","step","error","bookingDate","getTime","bookingDateError","bookingTime","bookingTimeError","fullname","trim","length","fullnameError","email","validate","emailError","retypeEmail","retypeEmailError","phone","phoneError","package","bookingRef","res","getNewReference","data","ref","ex","console"],"mappings":"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","sourcesContent":["import * as EmailValidator from \"email-validator\";\nimport BookService from \"./services/BookService\";\n\nexport default async function ValidateStep(state, setState, step) {\n  var error = false;\n  if (step === 0) {\n    if (!state.bookingDate || !state.bookingDate.getTime()) {\n      setState((state) => ({ ...state, bookingDateError: true }));\n      error = true;\n    }\n  }\n  if (step === 1) {\n    /// Validate time\n\n    if (!state.bookingTime) {\n      setState((state) => ({ ...state, bookingTimeError: true }));\n      error = true;\n    }\n  } else if (step === 2) {\n    ///validate Basic Info\n    if (!state.fullname || state.fullname.trim().length < 1) {\n      setState((state) => ({ ...state, fullnameError: true }));\n      error = true;\n    }\n    if (!state.email || !EmailValidator.validate(state.email)) {\n      setState((state) => ({ ...state, emailError: true }));\n      error = true;\n    }\n\n    if (\n      !state.retypeEmail ||\n      !EmailValidator.validate(state.retypeEmail) ||\n      state.email !== state.retypeEmail\n    ) {\n      setState((state) => ({ ...state, retypeEmailError: true }));\n      error = true;\n    }\n\n    if (!state.phone || state.phone.trim().length < 1) {\n      setState((state) => ({ ...state, phoneError: true }));\n      error = true;\n    }\n\n    // if (!state.emailConfirmed)\n    // {\n    //   setState(state => ({...state, emailConfirmedError : true}));\n    //   error = true;\n    // }\n  } else if (step === 3) {\n\n    if (!state.package) {\n      state.package = \"Consultation\"\n    }\n\n    // if (state.package && state.package.toLowerCase() === \"others\") {\n    //   if (!state.notes || state.notes.length < 1) {\n    //     error = true;\n    //     setState((state) => ({ ...state, notesError: true }));\n    //   }\n    // }\n\n    if (!error) {\n      if (!state.bookingRef) {\n        try {\n          const res = await BookService.getNewReference();\n          if (res && res.data && res.data.ref) {\n            setState((state) => ({ ...state, bookingRef: res.data.ref }));\n          }\n          else\n          {\n            error = true;\n          }\n        } catch (ex) {\n          console.error(ex);\n          error = true;\n        }\n      }\n    }\n  }\n\n  return !error;\n}\n"]},"metadata":{},"sourceType":"module"}