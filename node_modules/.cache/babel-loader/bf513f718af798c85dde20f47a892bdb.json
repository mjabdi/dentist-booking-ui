{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mohammad/MyProjects/dentist-booking-ui/src/TimeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport GlobalState from './GlobalState';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport TimeService from './services/TimeService';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport dateformat from 'dateformat';\nimport { BrowserView, MobileView } from 'react-device-detect'; // import Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button'\n// import { Mouse, Satellite } from '@material-ui/icons';\n// import { BrowserView } from 'react-device-detect';\n\nimport PhoneIcon from '@material-ui/icons/Phone';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {// width: 500,\n    // height: 450,\n  },\n  box: {\n    //backgroundColor: \"red\",\n    border: \"1px solid #999\",\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#555\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      background: theme.palette.primary.light // color: \"#fff\"\n\n    }\n  },\n  boxMobile: {\n    //backgroundColor: \"red\",\n    border: \"1px solid #999\",\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#555\",\n    cursor: \"pointer\"\n  },\n  boxSelected: {\n    backgroundColor: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.light}`,\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  },\n  boxDisable: {\n    backgroundColor: \"#999\",\n    border: \"1px solid #ddd\",\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#fff\"\n  },\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginBottom: \"15px\"\n  }\n}));\n\nfunction isWeekend(date) {\n  return date.getDay() === 0 || date.getDay() === 6; /// Weekend\n}\n\nexport default function TimeForm() {\n  _s();\n\n  var _state$bookingTime;\n\n  const classes = useStyles(); // const theme = useTheme();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookingTime, setTime] = React.useState((_state$bookingTime = state.bookingTime) !== null && _state$bookingTime !== void 0 ? _state$bookingTime : '');\n  const [dataLoaded, setDataLoaded] = React.useState(false);\n  const emptyTimeSlots = [];\n\n  for (var i = 0; i < 12; i++) {\n    emptyTimeSlots.push(i);\n  }\n\n  const [timeSlots, setTimeSlots] = React.useState(emptyTimeSlots);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const LoadData = date => {\n    setTimeSlots(emptyTimeSlots);\n    setDataLoaded(false); // const dateStr = dateformat(date,'yyyy-mm-dd');\n\n    const promise1 = TimeService.getTimeSlots(date);\n    Promise.all([promise1]).then(values => {\n      const timeSlotsTmp = values[0].data; // if (isWeekend(date) && dateStr !== '2020-12-27')\n      // {\n      //   for (var i=0 ; i < timeSlotsTmp.length ; i++)\n      //   {\n      //     if (parseInt(timeSlotsTmp[i].time.substr(0,2)) < 10 && timeSlotsTmp[i].time.indexOf('AM') > 0)\n      //     {\n      //       timeSlotsTmp[i].available = false;\n      //     }\n      //     if (parseInt(timeSlotsTmp[i].time.substr(0,2)) > 1 && parseInt(timeSlotsTmp[i].time.substr(0,2)) < 12 &&timeSlotsTmp[i].time.indexOf('PM') > 0)\n      //     {\n      //       timeSlotsTmp[i].available = false;\n      //     }\n      //   }\n      // }\n      // if (beforeFeb())\n      // {\n      //   timeSlotsTmp.forEach(time =>\n      //     {\n      //       time.available = false;\n      //     });\n      // }\n\n      setTimeSlots(timeSlotsTmp);\n      setDataLoaded(true);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  useEffect(() => {\n    if (state.bookingDate && state.bookingDate !== 'undefined') LoadData(state.bookingDate);\n  }, []); // useEffect(() => {\n  //   var interval ;\n  //   if (state.bookingDate && state.bookingDate !== 'undefined')\n  //     {\n  //       interval = setInterval(() => {\n  //         LoadData(state.bookingDate);\n  //       }, 2000);\n  //     }\n  //     return () => {\n  //       if (interval)\n  //         clearInterval(interval);\n  //     }\n  // }, []);\n\n  const boxClicked = key => {\n    if (key) {\n      setTime(key);\n      setState({ ...state,\n        bookingTime: key\n      });\n    }\n  };\n\n  const beforeFeb = () => {\n    const dateStr = dateformat(state.bookingDate, 'yyyy-mm-dd');\n    return dateStr < '2021-02-01';\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      className: classes.pageTitle,\n      children: \"Pick a Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), dataLoaded ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"1.2rem\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            color: \"#0c4e59\",\n            fontWeight: \"500\",\n            background: \"#d9fffd\"\n          },\n          children: [\"For early or late night appointment, for weekend or if your desired time is already booked please call \\\"020 71830357\\\" and one of our team would be happy to accommodate if possible\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"20px\",\n              fontSize: \"1.5rem\",\n              fontWeight: \"500\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              direction: \"row\",\n              justify: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"tel:02071831049\",\n                    children: [/*#__PURE__*/_jsxDEV(PhoneIcon, {\n                      style: {\n                        color: \"#00909d\",\n                        fontSize: \"2rem\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 56\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    marginTop: \"-10px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"tel:02071830357\",\n                    style: {\n                      color: \"#00909d\"\n                    },\n                    children: \" Call:  020 71830357 \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), timeSlots.length === 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"1.2rem\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            color: \"#db0000\",\n            fontWeight: \"500\",\n            background: \"#fff5f5\"\n          },\n          children: [\"Sorry the clinic is closed on this day!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this), \"Please choose an alternative day.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BrowserView, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(GridList, {\n            cellHeight: 60,\n            className: classes.gridList,\n            children: timeSlots.map(timeSlot => /*#__PURE__*/_jsxDEV(GridListTile, {\n              cols: 1,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  timeSlot.available ? boxClicked(timeSlot.time) : boxClicked(null);\n                },\n                className: timeSlot.available ? bookingTime === timeSlot.time ? classes.boxSelected : classes.box : classes.boxDisable,\n                children: timeSlot.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, timeSlot.time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MobileView, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(GridList, {\n            cellHeight: 60,\n            className: classes.gridList,\n            cols: 4,\n            children: timeSlots.map(timeSlot => /*#__PURE__*/_jsxDEV(GridListTile, {\n              cols: 1,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  timeSlot.available ? boxClicked(timeSlot.time) : boxClicked(null);\n                },\n                className: timeSlot.available ? bookingTime === timeSlot.time ? classes.boxSelected : classes.boxMobile : classes.boxDisable,\n                children: timeSlot.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)\n            }, timeSlot.time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(GridList, {\n          cellHeight: 60,\n          className: classes.gridList,\n          cols: 4,\n          children: emptyTimeSlots.map(timeSlot => /*#__PURE__*/_jsxDEV(GridListTile, {\n            cols: 1,\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              variant: \"rect\",\n              width: 120,\n              height: 35\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)\n          }, timeSlot, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TimeForm, \"crsFJhyroVhCZQBpu/dSwQkXZ6k=\", false, function () {\n  return [useStyles];\n});\n\n_c = TimeForm;\n\nconst checkFullyBooked = timeSlots => {\n  let available = false;\n  timeSlots.forEach(time => {\n    if (time.available) {\n      available = true;\n    }\n  });\n  return !available && timeSlots.length > 0;\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeForm\");","map":{"version":3,"sources":["/Users/mohammad/MyProjects/dentist-booking-ui/src/TimeForm.js"],"names":["React","useEffect","Typography","GlobalState","makeStyles","useTheme","GridList","GridListTile","TimeService","Grid","Skeleton","dateformat","BrowserView","MobileView","PhoneIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","box","border","margin","padding","color","cursor","primary","light","boxMobile","boxSelected","main","boxDisable","pageTitle","marginBottom","isWeekend","date","getDay","TimeForm","classes","state","setState","useContext","bookingTime","setTime","useState","dataLoaded","setDataLoaded","emptyTimeSlots","i","push","timeSlots","setTimeSlots","window","scrollTo","LoadData","promise1","getTimeSlots","Promise","all","then","values","timeSlotsTmp","data","catch","err","console","error","bookingDate","boxClicked","key","beforeFeb","dateStr","fontSize","paddingTop","paddingBottom","fontWeight","marginTop","length","map","timeSlot","available","time","checkFullyBooked","forEach"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport GlobalState from './GlobalState';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nimport TimeService from './services/TimeService';\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport dateformat from 'dateformat';\n\nimport { BrowserView, MobileView } from 'react-device-detect';\n\n\n// import Card from '@material-ui/core/Card';\n// import CardActions from '@material-ui/core/CardActions';\n// import CardContent from '@material-ui/core/CardContent';\n// import Button from '@material-ui/core/Button'\n// import { Mouse, Satellite } from '@material-ui/icons';\n// import { BrowserView } from 'react-device-detect';\n\nimport PhoneIcon from '@material-ui/icons/Phone';\n\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    // width: 500,\n    // height: 450,\n  },\n\n  box: {\n    //backgroundColor: \"red\",\n    border: \"1px solid #999\",\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#555\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      background: theme.palette.primary.light,\n      // color: \"#fff\"\n    },\n  },\n\n  boxMobile: {\n    //backgroundColor: \"red\",\n    border: \"1px solid #999\",\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#555\",\n    cursor: \"pointer\"\n  },\n\n  boxSelected: {\n    backgroundColor: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.light}`,\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#fff\",\n    cursor: \"pointer\",\n  },\n\n  boxDisable: {\n    backgroundColor: \"#999\",\n    border: \"1px solid #ddd\",\n    margin: \"5px\",\n    padding: \"5px\",\n    color: \"#fff\"\n\n  },\n\n  pageTitle: {\n    color: theme.palette.primary.main,\n    marginBottom: \"15px\"\n  }\n\n}));\n\n\nfunction isWeekend(date) {\n  return (date.getDay() === 0 || date.getDay() === 6) /// Weekend\n}\n\n\nexport default function TimeForm() {\n  const classes = useStyles();\n  // const theme = useTheme();\n\n  const [state, setState] = React.useContext(GlobalState);\n  const [bookingTime, setTime] = React.useState(state.bookingTime ?? '');\n\n  const [dataLoaded, setDataLoaded] = React.useState(false);\n\n  const emptyTimeSlots = [];\n  for (var i = 0; i < 12; i++) {\n    emptyTimeSlots.push(i);\n  }\n\n  const [timeSlots, setTimeSlots] = React.useState(emptyTimeSlots);\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, []);\n\n  const LoadData = (date) => {\n\n    setTimeSlots(emptyTimeSlots);\n    setDataLoaded(false);\n\n    // const dateStr = dateformat(date,'yyyy-mm-dd');\n\n    const promise1 = TimeService.getTimeSlots(date);\n\n    Promise.all([promise1]).then((values) => {\n\n      const timeSlotsTmp = values[0].data;\n\n      // if (isWeekend(date) && dateStr !== '2020-12-27')\n      // {\n      //   for (var i=0 ; i < timeSlotsTmp.length ; i++)\n      //   {\n      //     if (parseInt(timeSlotsTmp[i].time.substr(0,2)) < 10 && timeSlotsTmp[i].time.indexOf('AM') > 0)\n      //     {\n      //       timeSlotsTmp[i].available = false;\n      //     }\n\n      //     if (parseInt(timeSlotsTmp[i].time.substr(0,2)) > 1 && parseInt(timeSlotsTmp[i].time.substr(0,2)) < 12 &&timeSlotsTmp[i].time.indexOf('PM') > 0)\n      //     {\n      //       timeSlotsTmp[i].available = false;\n      //     }\n      //   }\n      // }\n\n\n      // if (beforeFeb())\n      // {\n      //   timeSlotsTmp.forEach(time =>\n      //     {\n      //       time.available = false;\n      //     });\n      // }\n\n      setTimeSlots(timeSlotsTmp);\n      setDataLoaded(true);\n\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  useEffect(() => {\n    if (state.bookingDate && state.bookingDate !== 'undefined')\n      LoadData(state.bookingDate);\n  }, []);\n\n  // useEffect(() => {\n  //   var interval ;\n  //   if (state.bookingDate && state.bookingDate !== 'undefined')\n  //     {\n  //       interval = setInterval(() => {\n  //         LoadData(state.bookingDate);\n  //       }, 2000);\n  //     }\n\n  //     return () => {\n  //       if (interval)\n  //         clearInterval(interval);\n  //     }\n\n  // }, []);\n\n\n\n\n\n  const boxClicked = (key) => {\n    if (key) {\n      setTime(key);\n      setState({ ...state, bookingTime: key });\n    }\n\n  }\n\n  const beforeFeb = () => {\n    const dateStr = dateformat(state.bookingDate, 'yyyy-mm-dd');\n    return dateStr < '2021-02-01';\n  }\n\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom className={classes.pageTitle}>\n        Pick a Time\n      </Typography>\n\n      {dataLoaded ? (\n\n\n        <React.Fragment>\n\n\n\n          {/* {checkFullyBooked(timeSlots) && ( */}\n\n            <React.Fragment>\n              <div style={{ fontSize: \"1.2rem\", paddingTop: \"10px\", paddingBottom: \"10px\", color: \"#0c4e59\", fontWeight: \"500\", background: \"#d9fffd\" }}>\n              For early or late night appointment, for weekend or if your desired time is already booked please call \"020 71830357\" and one of our team would be happy to accommodate if possible\n                    <div style={{ marginTop: \"20px\", fontSize: \"1.5rem\", fontWeight: \"500\" }}>\n                  <Grid container spacing={2} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    <Grid item>\n                      <div>  <a href=\"tel:02071831049\"><PhoneIcon style={{ color: \"#00909d\", fontSize: \"2rem\" }} /> </a></div>\n                    </Grid>\n                    <Grid item>\n                      <div style={{ marginTop: \"-10px\" }}>\n                        <a href=\"tel:02071830357\" style={{ color: \"#00909d\" }}> Call:  020 71830357 </a>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n\n              </div>\n\n            </React.Fragment>\n\n          {/* )} */}\n\n          {timeSlots.length === 0 && (\n\n            <React.Fragment>\n              <div style={{ fontSize: \"1.2rem\", paddingTop: \"10px\", paddingBottom: \"10px\", color: \"#db0000\", fontWeight: \"500\", background: \"#fff5f5\" }}>\n                Sorry the clinic is closed on this day!\n                    <br />Please choose an alternative day.\n                  </div>\n\n            </React.Fragment>\n\n          )}\n\n          <BrowserView>\n            <div className={classes.root}>\n              <GridList cellHeight={60} className={classes.gridList}>\n                {timeSlots.map((timeSlot) => (\n                  <GridListTile key={timeSlot.time} cols={1}>\n                    <div\n                      onClick={() => { timeSlot.available ? boxClicked(timeSlot.time) : boxClicked(null) }}\n                      className={(timeSlot.available) ? ((bookingTime === timeSlot.time) ? classes.boxSelected : classes.box) : classes.boxDisable}>\n                      {timeSlot.time}\n                    </div>\n                  </GridListTile>\n                ))}\n              </GridList>\n            </div>\n\n          </BrowserView>\n\n          <MobileView>\n\n            <div className={classes.root}>\n              <GridList cellHeight={60} className={classes.gridList} cols={4}>\n                {timeSlots.map((timeSlot) => (\n                  <GridListTile key={timeSlot.time} cols={1}>\n                    <div\n                      onClick={() => { timeSlot.available ? boxClicked(timeSlot.time) : boxClicked(null) }}\n                      className={(timeSlot.available) ? ((bookingTime === timeSlot.time) ? classes.boxSelected : classes.boxMobile) : classes.boxDisable}>\n                      {timeSlot.time}\n                    </div>\n                  </GridListTile>\n                ))}\n              </GridList>\n            </div>\n\n          </MobileView>\n\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <GridList cellHeight={60} className={classes.gridList} cols={4}>\n              {emptyTimeSlots.map((timeSlot) => (\n                <GridListTile key={timeSlot} cols={1}>\n                  <Skeleton variant=\"rect\" width={120} height={35} />\n                </GridListTile>\n              ))}\n            </GridList>\n          </Grid>\n\n        </React.Fragment>\n\n      )}\n\n\n\n    </React.Fragment>\n  );\n}\n\n\n\nconst checkFullyBooked = (timeSlots) => {\n  let available = false;\n  timeSlots.forEach(time => {\n    if (time.available) {\n      available = true;\n    }\n  });\n\n  return !available && timeSlots.length > 0;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}